/*
 * PX Cloud for Success Tracks API
 * PX Cloud for Success Tracks API
 *
 * The version of the OpenAPI document: 0.9.11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cisco.px.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.cisco.px.client.JSON;

/**
 * SoftwareGroupSecurityAdvisories
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-10T19:31:00.454334Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class SoftwareGroupSecurityAdvisories {
  public static final String SERIALIZED_NAME_TITLE = "title";
  @SerializedName(SERIALIZED_NAME_TITLE)
  private String title;

  public static final String SERIALIZED_NAME_ADVISORY_VERSION = "advisoryVersion";
  @SerializedName(SERIALIZED_NAME_ADVISORY_VERSION)
  private String advisoryVersion;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_ADVISORY_ID = "advisoryId";
  @SerializedName(SERIALIZED_NAME_ADVISORY_ID)
  private String advisoryId;

  public static final String SERIALIZED_NAME_IMPACT = "impact";
  @SerializedName(SERIALIZED_NAME_IMPACT)
  private String impact;

  public static final String SERIALIZED_NAME_UPDATED = "updated";
  @SerializedName(SERIALIZED_NAME_UPDATED)
  private String updated;

  public SoftwareGroupSecurityAdvisories() {
  }

  public SoftwareGroupSecurityAdvisories title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Title of the security advisory.
   * @return title
  **/
  @javax.annotation.Nullable
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }


  public SoftwareGroupSecurityAdvisories advisoryVersion(String advisoryVersion) {
    this.advisoryVersion = advisoryVersion;
    return this;
  }

   /**
   * Version number of the published security advisory.
   * @return advisoryVersion
  **/
  @javax.annotation.Nullable
  public String getAdvisoryVersion() {
    return advisoryVersion;
  }

  public void setAdvisoryVersion(String advisoryVersion) {
    this.advisoryVersion = advisoryVersion;
  }


  public SoftwareGroupSecurityAdvisories state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Status of the software advisory. Can be Exposed or Not Exposed.
   * @return state
  **/
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public SoftwareGroupSecurityAdvisories advisoryId(String advisoryId) {
    this.advisoryId = advisoryId;
    return this;
  }

   /**
   * Unique identifier of the security advisory.
   * @return advisoryId
  **/
  @javax.annotation.Nullable
  public String getAdvisoryId() {
    return advisoryId;
  }

  public void setAdvisoryId(String advisoryId) {
    this.advisoryId = advisoryId;
  }


  public SoftwareGroupSecurityAdvisories impact(String impact) {
    this.impact = impact;
    return this;
  }

   /**
   * Severity level of the security advisory. Can be High, Medium, or Low.
   * @return impact
  **/
  @javax.annotation.Nullable
  public String getImpact() {
    return impact;
  }

  public void setImpact(String impact) {
    this.impact = impact;
  }


  public SoftwareGroupSecurityAdvisories updated(String updated) {
    this.updated = updated;
    return this;
  }

   /**
   * Last update of the security advisory.
   * @return updated
  **/
  @javax.annotation.Nullable
  public String getUpdated() {
    return updated;
  }

  public void setUpdated(String updated) {
    this.updated = updated;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SoftwareGroupSecurityAdvisories softwareGroupSecurityAdvisories = (SoftwareGroupSecurityAdvisories) o;
    return Objects.equals(this.title, softwareGroupSecurityAdvisories.title) &&
        Objects.equals(this.advisoryVersion, softwareGroupSecurityAdvisories.advisoryVersion) &&
        Objects.equals(this.state, softwareGroupSecurityAdvisories.state) &&
        Objects.equals(this.advisoryId, softwareGroupSecurityAdvisories.advisoryId) &&
        Objects.equals(this.impact, softwareGroupSecurityAdvisories.impact) &&
        Objects.equals(this.updated, softwareGroupSecurityAdvisories.updated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(title, advisoryVersion, state, advisoryId, impact, updated);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SoftwareGroupSecurityAdvisories {\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    advisoryVersion: ").append(toIndentedString(advisoryVersion)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    advisoryId: ").append(toIndentedString(advisoryId)).append("\n");
    sb.append("    impact: ").append(toIndentedString(impact)).append("\n");
    sb.append("    updated: ").append(toIndentedString(updated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("title");
    openapiFields.add("advisoryVersion");
    openapiFields.add("state");
    openapiFields.add("advisoryId");
    openapiFields.add("impact");
    openapiFields.add("updated");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to SoftwareGroupSecurityAdvisories
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SoftwareGroupSecurityAdvisories.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SoftwareGroupSecurityAdvisories is not found in the empty JSON string", SoftwareGroupSecurityAdvisories.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SoftwareGroupSecurityAdvisories.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SoftwareGroupSecurityAdvisories` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("title") != null && !jsonObj.get("title").isJsonNull()) && !jsonObj.get("title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("title").toString()));
      }
      if ((jsonObj.get("advisoryVersion") != null && !jsonObj.get("advisoryVersion").isJsonNull()) && !jsonObj.get("advisoryVersion").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advisoryVersion` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advisoryVersion").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("advisoryId") != null && !jsonObj.get("advisoryId").isJsonNull()) && !jsonObj.get("advisoryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `advisoryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("advisoryId").toString()));
      }
      if ((jsonObj.get("impact") != null && !jsonObj.get("impact").isJsonNull()) && !jsonObj.get("impact").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `impact` to be a primitive type in the JSON string but got `%s`", jsonObj.get("impact").toString()));
      }
      if ((jsonObj.get("updated") != null && !jsonObj.get("updated").isJsonNull()) && !jsonObj.get("updated").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `updated` to be a primitive type in the JSON string but got `%s`", jsonObj.get("updated").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SoftwareGroupSecurityAdvisories.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SoftwareGroupSecurityAdvisories' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SoftwareGroupSecurityAdvisories> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SoftwareGroupSecurityAdvisories.class));

       return (TypeAdapter<T>) new TypeAdapter<SoftwareGroupSecurityAdvisories>() {
           @Override
           public void write(JsonWriter out, SoftwareGroupSecurityAdvisories value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SoftwareGroupSecurityAdvisories read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SoftwareGroupSecurityAdvisories given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SoftwareGroupSecurityAdvisories
  * @throws IOException if the JSON string is invalid with respect to SoftwareGroupSecurityAdvisories
  */
  public static SoftwareGroupSecurityAdvisories fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SoftwareGroupSecurityAdvisories.class);
  }

 /**
  * Convert an instance of SoftwareGroupSecurityAdvisories to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

