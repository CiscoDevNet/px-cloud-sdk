/*
 * PX Cloud for Success Tracks API
 * PX Cloud for Success Tracks API
 *
 * The version of the OpenAPI document: 0.9.11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cisco.px.client.model;

import java.util.Objects;
import com.cisco.px.client.model.CustomerDetails;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.cisco.px.client.JSON;

/**
 * ContractV2
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-10T19:31:00.454334Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ContractV2 {
  public static final String SERIALIZED_NAME_CONTRACT_NUMBER = "contractNumber";
  @SerializedName(SERIALIZED_NAME_CONTRACT_NUMBER)
  private String contractNumber;

  public static final String SERIALIZED_NAME_CONTRACT_STATUS = "contractStatus";
  @SerializedName(SERIALIZED_NAME_CONTRACT_STATUS)
  private String contractStatus;

  public static final String SERIALIZED_NAME_CONTRACT_VALUE = "contractValue";
  @SerializedName(SERIALIZED_NAME_CONTRACT_VALUE)
  private Long contractValue;

  public static final String SERIALIZED_NAME_COVERAGE_START_DATE = "coverageStartDate";
  @SerializedName(SERIALIZED_NAME_COVERAGE_START_DATE)
  private String coverageStartDate;

  public static final String SERIALIZED_NAME_COVERAGE_END_DATE = "coverageEndDate";
  @SerializedName(SERIALIZED_NAME_COVERAGE_END_DATE)
  private String coverageEndDate;

  public static final String SERIALIZED_NAME_CUSTOMER_DETAILS = "customerDetails";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_DETAILS)
  private List<CustomerDetails> customerDetails;

  public static final String SERIALIZED_NAME_SERVICE_LEVEL = "serviceLevel";
  @SerializedName(SERIALIZED_NAME_SERVICE_LEVEL)
  private String serviceLevel;

  public static final String SERIALIZED_NAME_SUCCESS_TRACK_IDS = "successTrackIds";
  @SerializedName(SERIALIZED_NAME_SUCCESS_TRACK_IDS)
  private List<Long> successTrackIds;

  public static final String SERIALIZED_NAME_ONBOARDED_STATUS = "onboardedStatus";
  @SerializedName(SERIALIZED_NAME_ONBOARDED_STATUS)
  private Long onboardedStatus;

  public ContractV2() {
  }

  public ContractV2 contractNumber(String contractNumber) {
    this.contractNumber = contractNumber;
    return this;
  }

   /**
   * Get contractNumber
   * @return contractNumber
  **/
  @javax.annotation.Nullable
  public String getContractNumber() {
    return contractNumber;
  }

  public void setContractNumber(String contractNumber) {
    this.contractNumber = contractNumber;
  }


  public ContractV2 contractStatus(String contractStatus) {
    this.contractStatus = contractStatus;
    return this;
  }

   /**
   * Get contractStatus
   * @return contractStatus
  **/
  @javax.annotation.Nullable
  public String getContractStatus() {
    return contractStatus;
  }

  public void setContractStatus(String contractStatus) {
    this.contractStatus = contractStatus;
  }


  public ContractV2 contractValue(Long contractValue) {
    this.contractValue = contractValue;
    return this;
  }

   /**
   * Get contractValue
   * @return contractValue
  **/
  @javax.annotation.Nullable
  public Long getContractValue() {
    return contractValue;
  }

  public void setContractValue(Long contractValue) {
    this.contractValue = contractValue;
  }


  public ContractV2 coverageStartDate(String coverageStartDate) {
    this.coverageStartDate = coverageStartDate;
    return this;
  }

   /**
   * Get coverageStartDate
   * @return coverageStartDate
  **/
  @javax.annotation.Nullable
  public String getCoverageStartDate() {
    return coverageStartDate;
  }

  public void setCoverageStartDate(String coverageStartDate) {
    this.coverageStartDate = coverageStartDate;
  }


  public ContractV2 coverageEndDate(String coverageEndDate) {
    this.coverageEndDate = coverageEndDate;
    return this;
  }

   /**
   * Get coverageEndDate
   * @return coverageEndDate
  **/
  @javax.annotation.Nullable
  public String getCoverageEndDate() {
    return coverageEndDate;
  }

  public void setCoverageEndDate(String coverageEndDate) {
    this.coverageEndDate = coverageEndDate;
  }


  public ContractV2 customerDetails(List<CustomerDetails> customerDetails) {
    this.customerDetails = customerDetails;
    return this;
  }

  public ContractV2 addCustomerDetailsItem(CustomerDetails customerDetailsItem) {
    if (this.customerDetails == null) {
      this.customerDetails = new ArrayList<>();
    }
    this.customerDetails.add(customerDetailsItem);
    return this;
  }

   /**
   * Get customerDetails
   * @return customerDetails
  **/
  @javax.annotation.Nullable
  public List<CustomerDetails> getCustomerDetails() {
    return customerDetails;
  }

  public void setCustomerDetails(List<CustomerDetails> customerDetails) {
    this.customerDetails = customerDetails;
  }


  public ContractV2 serviceLevel(String serviceLevel) {
    this.serviceLevel = serviceLevel;
    return this;
  }

   /**
   * Get serviceLevel
   * @return serviceLevel
  **/
  @javax.annotation.Nullable
  public String getServiceLevel() {
    return serviceLevel;
  }

  public void setServiceLevel(String serviceLevel) {
    this.serviceLevel = serviceLevel;
  }


  public ContractV2 successTrackIds(List<Long> successTrackIds) {
    this.successTrackIds = successTrackIds;
    return this;
  }

  public ContractV2 addSuccessTrackIdsItem(Long successTrackIdsItem) {
    if (this.successTrackIds == null) {
      this.successTrackIds = new ArrayList<>();
    }
    this.successTrackIds.add(successTrackIdsItem);
    return this;
  }

   /**
   * Get successTrackIds
   * @return successTrackIds
  **/
  @javax.annotation.Nullable
  public List<Long> getSuccessTrackIds() {
    return successTrackIds;
  }

  public void setSuccessTrackIds(List<Long> successTrackIds) {
    this.successTrackIds = successTrackIds;
  }


  public ContractV2 onboardedStatus(Long onboardedStatus) {
    this.onboardedStatus = onboardedStatus;
    return this;
  }

   /**
   * Get onboardedStatus
   * @return onboardedStatus
  **/
  @javax.annotation.Nullable
  public Long getOnboardedStatus() {
    return onboardedStatus;
  }

  public void setOnboardedStatus(Long onboardedStatus) {
    this.onboardedStatus = onboardedStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContractV2 contractV2 = (ContractV2) o;
    return Objects.equals(this.contractNumber, contractV2.contractNumber) &&
        Objects.equals(this.contractStatus, contractV2.contractStatus) &&
        Objects.equals(this.contractValue, contractV2.contractValue) &&
        Objects.equals(this.coverageStartDate, contractV2.coverageStartDate) &&
        Objects.equals(this.coverageEndDate, contractV2.coverageEndDate) &&
        Objects.equals(this.customerDetails, contractV2.customerDetails) &&
        Objects.equals(this.serviceLevel, contractV2.serviceLevel) &&
        Objects.equals(this.successTrackIds, contractV2.successTrackIds) &&
        Objects.equals(this.onboardedStatus, contractV2.onboardedStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contractNumber, contractStatus, contractValue, coverageStartDate, coverageEndDate, customerDetails, serviceLevel, successTrackIds, onboardedStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContractV2 {\n");
    sb.append("    contractNumber: ").append(toIndentedString(contractNumber)).append("\n");
    sb.append("    contractStatus: ").append(toIndentedString(contractStatus)).append("\n");
    sb.append("    contractValue: ").append(toIndentedString(contractValue)).append("\n");
    sb.append("    coverageStartDate: ").append(toIndentedString(coverageStartDate)).append("\n");
    sb.append("    coverageEndDate: ").append(toIndentedString(coverageEndDate)).append("\n");
    sb.append("    customerDetails: ").append(toIndentedString(customerDetails)).append("\n");
    sb.append("    serviceLevel: ").append(toIndentedString(serviceLevel)).append("\n");
    sb.append("    successTrackIds: ").append(toIndentedString(successTrackIds)).append("\n");
    sb.append("    onboardedStatus: ").append(toIndentedString(onboardedStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contractNumber");
    openapiFields.add("contractStatus");
    openapiFields.add("contractValue");
    openapiFields.add("coverageStartDate");
    openapiFields.add("coverageEndDate");
    openapiFields.add("customerDetails");
    openapiFields.add("serviceLevel");
    openapiFields.add("successTrackIds");
    openapiFields.add("onboardedStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ContractV2
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContractV2.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContractV2 is not found in the empty JSON string", ContractV2.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContractV2.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContractV2` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("contractNumber") != null && !jsonObj.get("contractNumber").isJsonNull()) && !jsonObj.get("contractNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contractNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contractNumber").toString()));
      }
      if ((jsonObj.get("contractStatus") != null && !jsonObj.get("contractStatus").isJsonNull()) && !jsonObj.get("contractStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contractStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contractStatus").toString()));
      }
      if ((jsonObj.get("coverageStartDate") != null && !jsonObj.get("coverageStartDate").isJsonNull()) && !jsonObj.get("coverageStartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coverageStartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coverageStartDate").toString()));
      }
      if ((jsonObj.get("coverageEndDate") != null && !jsonObj.get("coverageEndDate").isJsonNull()) && !jsonObj.get("coverageEndDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coverageEndDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coverageEndDate").toString()));
      }
      if (jsonObj.get("customerDetails") != null && !jsonObj.get("customerDetails").isJsonNull()) {
        JsonArray jsonArraycustomerDetails = jsonObj.getAsJsonArray("customerDetails");
        if (jsonArraycustomerDetails != null) {
          // ensure the json data is an array
          if (!jsonObj.get("customerDetails").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `customerDetails` to be an array in the JSON string but got `%s`", jsonObj.get("customerDetails").toString()));
          }

          // validate the optional field `customerDetails` (array)
          for (int i = 0; i < jsonArraycustomerDetails.size(); i++) {
            CustomerDetails.validateJsonElement(jsonArraycustomerDetails.get(i));
          };
        }
      }
      if ((jsonObj.get("serviceLevel") != null && !jsonObj.get("serviceLevel").isJsonNull()) && !jsonObj.get("serviceLevel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceLevel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceLevel").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("successTrackIds") != null && !jsonObj.get("successTrackIds").isJsonNull() && !jsonObj.get("successTrackIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `successTrackIds` to be an array in the JSON string but got `%s`", jsonObj.get("successTrackIds").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContractV2.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContractV2' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContractV2> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContractV2.class));

       return (TypeAdapter<T>) new TypeAdapter<ContractV2>() {
           @Override
           public void write(JsonWriter out, ContractV2 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContractV2 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ContractV2 given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ContractV2
  * @throws IOException if the JSON string is invalid with respect to ContractV2
  */
  public static ContractV2 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContractV2.class);
  }

 /**
  * Convert an instance of ContractV2 to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

