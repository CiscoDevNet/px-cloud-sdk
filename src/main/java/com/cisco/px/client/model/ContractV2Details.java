/*
 * PX Cloud for Success Tracks API
 * PX Cloud for Success Tracks API
 *
 * The version of the OpenAPI document: 0.9.11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cisco.px.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.cisco.px.client.JSON;

/**
 * ContractV2Details
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-05-10T19:31:00.454334Z[Etc/UTC]", comments = "Generator version: 7.4.0")
public class ContractV2Details {
  public static final String SERIALIZED_NAME_CUSTOMER_NAME = "customerName";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_NAME)
  private String customerName;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customerId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private String customerId;

  public static final String SERIALIZED_NAME_CUSTOMER_G_U_NAME = "customerGUName";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_G_U_NAME)
  private String customerGUName;

  public static final String SERIALIZED_NAME_CUSTOMER_H_Q_NAME = "customerHQName";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_H_Q_NAME)
  private String customerHQName;

  public static final String SERIALIZED_NAME_CONTRACT_NUMBER = "contractNumber";
  @SerializedName(SERIALIZED_NAME_CONTRACT_NUMBER)
  private String contractNumber;

  public static final String SERIALIZED_NAME_SUCCESS_TRACK_IDS = "successTrackIds";
  @SerializedName(SERIALIZED_NAME_SUCCESS_TRACK_IDS)
  private List<Long> successTrackIds;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "productId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private String productId;

  public static final String SERIALIZED_NAME_SERIAL_NUMBER = "serialNumber";
  @SerializedName(SERIALIZED_NAME_SERIAL_NUMBER)
  private String serialNumber;

  public static final String SERIALIZED_NAME_CONTRACT_STATUS = "contractStatus";
  @SerializedName(SERIALIZED_NAME_CONTRACT_STATUS)
  private String contractStatus;

  public static final String SERIALIZED_NAME_CONTRACT_LINE_ITEM_TYPE = "contractLineItemType";
  @SerializedName(SERIALIZED_NAME_CONTRACT_LINE_ITEM_TYPE)
  private String contractLineItemType;

  public static final String SERIALIZED_NAME_SERVICE_LEVEL = "serviceLevel";
  @SerializedName(SERIALIZED_NAME_SERVICE_LEVEL)
  private String serviceLevel;

  public static final String SERIALIZED_NAME_COVERAGE_START_DATE = "coverageStartDate";
  @SerializedName(SERIALIZED_NAME_COVERAGE_START_DATE)
  private String coverageStartDate;

  public static final String SERIALIZED_NAME_COVERAGE_END_DATE = "coverageEndDate";
  @SerializedName(SERIALIZED_NAME_COVERAGE_END_DATE)
  private String coverageEndDate;

  public static final String SERIALIZED_NAME_INSTALLATION_QUANTITY = "installationQuantity";
  @SerializedName(SERIALIZED_NAME_INSTALLATION_QUANTITY)
  private Long installationQuantity;

  public static final String SERIALIZED_NAME_INSTANCE_NUMBER = "instanceNumber";
  @SerializedName(SERIALIZED_NAME_INSTANCE_NUMBER)
  private Long instanceNumber;

  public ContractV2Details() {
  }

  public ContractV2Details customerName(String customerName) {
    this.customerName = customerName;
    return this;
  }

   /**
   * Get customerName
   * @return customerName
  **/
  @javax.annotation.Nullable
  public String getCustomerName() {
    return customerName;
  }

  public void setCustomerName(String customerName) {
    this.customerName = customerName;
  }


  public ContractV2Details customerId(String customerId) {
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @javax.annotation.Nullable
  public String getCustomerId() {
    return customerId;
  }

  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public ContractV2Details customerGUName(String customerGUName) {
    this.customerGUName = customerGUName;
    return this;
  }

   /**
   * Get customerGUName
   * @return customerGUName
  **/
  @javax.annotation.Nullable
  public String getCustomerGUName() {
    return customerGUName;
  }

  public void setCustomerGUName(String customerGUName) {
    this.customerGUName = customerGUName;
  }


  public ContractV2Details customerHQName(String customerHQName) {
    this.customerHQName = customerHQName;
    return this;
  }

   /**
   * Get customerHQName
   * @return customerHQName
  **/
  @javax.annotation.Nullable
  public String getCustomerHQName() {
    return customerHQName;
  }

  public void setCustomerHQName(String customerHQName) {
    this.customerHQName = customerHQName;
  }


  public ContractV2Details contractNumber(String contractNumber) {
    this.contractNumber = contractNumber;
    return this;
  }

   /**
   * Get contractNumber
   * @return contractNumber
  **/
  @javax.annotation.Nullable
  public String getContractNumber() {
    return contractNumber;
  }

  public void setContractNumber(String contractNumber) {
    this.contractNumber = contractNumber;
  }


  public ContractV2Details successTrackIds(List<Long> successTrackIds) {
    this.successTrackIds = successTrackIds;
    return this;
  }

  public ContractV2Details addSuccessTrackIdsItem(Long successTrackIdsItem) {
    if (this.successTrackIds == null) {
      this.successTrackIds = new ArrayList<>();
    }
    this.successTrackIds.add(successTrackIdsItem);
    return this;
  }

   /**
   * Get successTrackIds
   * @return successTrackIds
  **/
  @javax.annotation.Nullable
  public List<Long> getSuccessTrackIds() {
    return successTrackIds;
  }

  public void setSuccessTrackIds(List<Long> successTrackIds) {
    this.successTrackIds = successTrackIds;
  }


  public ContractV2Details productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Get productId
   * @return productId
  **/
  @javax.annotation.Nullable
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }


  public ContractV2Details serialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

   /**
   * Get serialNumber
   * @return serialNumber
  **/
  @javax.annotation.Nullable
  public String getSerialNumber() {
    return serialNumber;
  }

  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }


  public ContractV2Details contractStatus(String contractStatus) {
    this.contractStatus = contractStatus;
    return this;
  }

   /**
   * Get contractStatus
   * @return contractStatus
  **/
  @javax.annotation.Nullable
  public String getContractStatus() {
    return contractStatus;
  }

  public void setContractStatus(String contractStatus) {
    this.contractStatus = contractStatus;
  }


  public ContractV2Details contractLineItemType(String contractLineItemType) {
    this.contractLineItemType = contractLineItemType;
    return this;
  }

   /**
   * Get contractLineItemType
   * @return contractLineItemType
  **/
  @javax.annotation.Nullable
  public String getContractLineItemType() {
    return contractLineItemType;
  }

  public void setContractLineItemType(String contractLineItemType) {
    this.contractLineItemType = contractLineItemType;
  }


  public ContractV2Details serviceLevel(String serviceLevel) {
    this.serviceLevel = serviceLevel;
    return this;
  }

   /**
   * Get serviceLevel
   * @return serviceLevel
  **/
  @javax.annotation.Nullable
  public String getServiceLevel() {
    return serviceLevel;
  }

  public void setServiceLevel(String serviceLevel) {
    this.serviceLevel = serviceLevel;
  }


  public ContractV2Details coverageStartDate(String coverageStartDate) {
    this.coverageStartDate = coverageStartDate;
    return this;
  }

   /**
   * Get coverageStartDate
   * @return coverageStartDate
  **/
  @javax.annotation.Nullable
  public String getCoverageStartDate() {
    return coverageStartDate;
  }

  public void setCoverageStartDate(String coverageStartDate) {
    this.coverageStartDate = coverageStartDate;
  }


  public ContractV2Details coverageEndDate(String coverageEndDate) {
    this.coverageEndDate = coverageEndDate;
    return this;
  }

   /**
   * Get coverageEndDate
   * @return coverageEndDate
  **/
  @javax.annotation.Nullable
  public String getCoverageEndDate() {
    return coverageEndDate;
  }

  public void setCoverageEndDate(String coverageEndDate) {
    this.coverageEndDate = coverageEndDate;
  }


  public ContractV2Details installationQuantity(Long installationQuantity) {
    this.installationQuantity = installationQuantity;
    return this;
  }

   /**
   * Get installationQuantity
   * @return installationQuantity
  **/
  @javax.annotation.Nullable
  public Long getInstallationQuantity() {
    return installationQuantity;
  }

  public void setInstallationQuantity(Long installationQuantity) {
    this.installationQuantity = installationQuantity;
  }


  public ContractV2Details instanceNumber(Long instanceNumber) {
    this.instanceNumber = instanceNumber;
    return this;
  }

   /**
   * Get instanceNumber
   * @return instanceNumber
  **/
  @javax.annotation.Nullable
  public Long getInstanceNumber() {
    return instanceNumber;
  }

  public void setInstanceNumber(Long instanceNumber) {
    this.instanceNumber = instanceNumber;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContractV2Details contractV2Details = (ContractV2Details) o;
    return Objects.equals(this.customerName, contractV2Details.customerName) &&
        Objects.equals(this.customerId, contractV2Details.customerId) &&
        Objects.equals(this.customerGUName, contractV2Details.customerGUName) &&
        Objects.equals(this.customerHQName, contractV2Details.customerHQName) &&
        Objects.equals(this.contractNumber, contractV2Details.contractNumber) &&
        Objects.equals(this.successTrackIds, contractV2Details.successTrackIds) &&
        Objects.equals(this.productId, contractV2Details.productId) &&
        Objects.equals(this.serialNumber, contractV2Details.serialNumber) &&
        Objects.equals(this.contractStatus, contractV2Details.contractStatus) &&
        Objects.equals(this.contractLineItemType, contractV2Details.contractLineItemType) &&
        Objects.equals(this.serviceLevel, contractV2Details.serviceLevel) &&
        Objects.equals(this.coverageStartDate, contractV2Details.coverageStartDate) &&
        Objects.equals(this.coverageEndDate, contractV2Details.coverageEndDate) &&
        Objects.equals(this.installationQuantity, contractV2Details.installationQuantity) &&
        Objects.equals(this.instanceNumber, contractV2Details.instanceNumber);
  }

  @Override
  public int hashCode() {
    return Objects.hash(customerName, customerId, customerGUName, customerHQName, contractNumber, successTrackIds, productId, serialNumber, contractStatus, contractLineItemType, serviceLevel, coverageStartDate, coverageEndDate, installationQuantity, instanceNumber);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContractV2Details {\n");
    sb.append("    customerName: ").append(toIndentedString(customerName)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    customerGUName: ").append(toIndentedString(customerGUName)).append("\n");
    sb.append("    customerHQName: ").append(toIndentedString(customerHQName)).append("\n");
    sb.append("    contractNumber: ").append(toIndentedString(contractNumber)).append("\n");
    sb.append("    successTrackIds: ").append(toIndentedString(successTrackIds)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    contractStatus: ").append(toIndentedString(contractStatus)).append("\n");
    sb.append("    contractLineItemType: ").append(toIndentedString(contractLineItemType)).append("\n");
    sb.append("    serviceLevel: ").append(toIndentedString(serviceLevel)).append("\n");
    sb.append("    coverageStartDate: ").append(toIndentedString(coverageStartDate)).append("\n");
    sb.append("    coverageEndDate: ").append(toIndentedString(coverageEndDate)).append("\n");
    sb.append("    installationQuantity: ").append(toIndentedString(installationQuantity)).append("\n");
    sb.append("    instanceNumber: ").append(toIndentedString(instanceNumber)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customerName");
    openapiFields.add("customerId");
    openapiFields.add("customerGUName");
    openapiFields.add("customerHQName");
    openapiFields.add("contractNumber");
    openapiFields.add("successTrackIds");
    openapiFields.add("productId");
    openapiFields.add("serialNumber");
    openapiFields.add("contractStatus");
    openapiFields.add("contractLineItemType");
    openapiFields.add("serviceLevel");
    openapiFields.add("coverageStartDate");
    openapiFields.add("coverageEndDate");
    openapiFields.add("installationQuantity");
    openapiFields.add("instanceNumber");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to ContractV2Details
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContractV2Details.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContractV2Details is not found in the empty JSON string", ContractV2Details.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContractV2Details.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContractV2Details` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("customerName") != null && !jsonObj.get("customerName").isJsonNull()) && !jsonObj.get("customerName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerName").toString()));
      }
      if ((jsonObj.get("customerId") != null && !jsonObj.get("customerId").isJsonNull()) && !jsonObj.get("customerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerId").toString()));
      }
      if ((jsonObj.get("customerGUName") != null && !jsonObj.get("customerGUName").isJsonNull()) && !jsonObj.get("customerGUName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerGUName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerGUName").toString()));
      }
      if ((jsonObj.get("customerHQName") != null && !jsonObj.get("customerHQName").isJsonNull()) && !jsonObj.get("customerHQName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerHQName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerHQName").toString()));
      }
      if ((jsonObj.get("contractNumber") != null && !jsonObj.get("contractNumber").isJsonNull()) && !jsonObj.get("contractNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contractNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contractNumber").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("successTrackIds") != null && !jsonObj.get("successTrackIds").isJsonNull() && !jsonObj.get("successTrackIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `successTrackIds` to be an array in the JSON string but got `%s`", jsonObj.get("successTrackIds").toString()));
      }
      if ((jsonObj.get("productId") != null && !jsonObj.get("productId").isJsonNull()) && !jsonObj.get("productId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `productId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("productId").toString()));
      }
      if ((jsonObj.get("serialNumber") != null && !jsonObj.get("serialNumber").isJsonNull()) && !jsonObj.get("serialNumber").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serialNumber` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serialNumber").toString()));
      }
      if ((jsonObj.get("contractStatus") != null && !jsonObj.get("contractStatus").isJsonNull()) && !jsonObj.get("contractStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contractStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contractStatus").toString()));
      }
      if ((jsonObj.get("contractLineItemType") != null && !jsonObj.get("contractLineItemType").isJsonNull()) && !jsonObj.get("contractLineItemType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contractLineItemType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contractLineItemType").toString()));
      }
      if ((jsonObj.get("serviceLevel") != null && !jsonObj.get("serviceLevel").isJsonNull()) && !jsonObj.get("serviceLevel").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `serviceLevel` to be a primitive type in the JSON string but got `%s`", jsonObj.get("serviceLevel").toString()));
      }
      if ((jsonObj.get("coverageStartDate") != null && !jsonObj.get("coverageStartDate").isJsonNull()) && !jsonObj.get("coverageStartDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coverageStartDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coverageStartDate").toString()));
      }
      if ((jsonObj.get("coverageEndDate") != null && !jsonObj.get("coverageEndDate").isJsonNull()) && !jsonObj.get("coverageEndDate").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `coverageEndDate` to be a primitive type in the JSON string but got `%s`", jsonObj.get("coverageEndDate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContractV2Details.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContractV2Details' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContractV2Details> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContractV2Details.class));

       return (TypeAdapter<T>) new TypeAdapter<ContractV2Details>() {
           @Override
           public void write(JsonWriter out, ContractV2Details value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContractV2Details read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ContractV2Details given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ContractV2Details
  * @throws IOException if the JSON string is invalid with respect to ContractV2Details
  */
  public static ContractV2Details fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContractV2Details.class);
  }

 /**
  * Convert an instance of ContractV2Details to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

