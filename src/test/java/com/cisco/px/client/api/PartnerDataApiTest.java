/*
 * PX Cloud for Success Tracks API
 * PX Cloud for Success Tracks API
 *
 * The version of the OpenAPI document: 0.9.11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cisco.px.client.api;

import com.cisco.px.client.ApiException;
import com.cisco.px.client.model.ContractDetailsResponse;
import com.cisco.px.client.model.ContractResponse;
import com.cisco.px.client.model.ContractsV2Response;
import com.cisco.px.client.model.ErrorResponse;
import com.cisco.px.client.model.LicensesPaginationResponse;
import com.cisco.px.client.model.PartnerAssetResponse;
import com.cisco.px.client.model.PartnerOfferWithSessions;
import com.cisco.px.client.model.UniqueContractsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PartnerDataApi
 */
@Disabled
public class PartnerDataApiTest {

    private final PartnerDataApi api = new PartnerDataApi();

    /**
     * Get customer contract details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContractDetailsTest() throws ApiException {
        Integer contractNumber = null;
        String successTrackId = null;
        Integer max = null;
        Integer offset = null;
        String componentType = null;
        String contractLineItemType = null;
        String customerId = null;
        ContractDetailsResponse response = api.getContractDetails(contractNumber, successTrackId, max, offset, componentType, contractLineItemType, customerId);
        // TODO: test validations
    }

    /**
     * List of Licenses for the selected Contract
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContractLicensesTest() throws ApiException {
        String contractNumber = null;
        Integer max = null;
        Integer offset = null;
        LicensesPaginationResponse response = api.getContractLicenses(contractNumber, max, offset);
        // TODO: test validations
    }

    /**
     * List customer contracts
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContractsTest() throws ApiException {
        Integer max = null;
        Integer offset = null;
        ContractResponse response = api.getContracts(max, offset);
        // TODO: test validations
    }

    /**
     * List contracts with customer details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getContractsWithCustomersTest() throws ApiException {
        String successTrackId = null;
        Integer max = null;
        Integer offset = null;
        String customerGUName = null;
        String customerId = null;
        ContractsV2Response response = api.getContractsWithCustomers(successTrackId, max, offset, customerGUName, customerId);
        // TODO: test validations
    }

    /**
     * List partner offers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPartnerOffersTest() throws ApiException {
        String successTrackId = null;
        Integer max = null;
        Integer offset = null;
        String customerId = null;
        String offerStatus = null;
        String offerType = null;
        PartnerAssetResponse response = api.getPartnerOffers(successTrackId, max, offset, customerId, offerStatus, offerType);
        // TODO: test validations
    }

    /**
     * Get partner offers session details
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPartnerOffersSessionsTest() throws ApiException {
        String successTrackId = null;
        Integer max = null;
        Integer offset = null;
        String customerId = null;
        String offerId = null;
        String offerStatus = null;
        String offerType = null;
        PartnerOfferWithSessions response = api.getPartnerOffersSessions(successTrackId, max, offset, customerId, offerId, offerStatus, offerType);
        // TODO: test validations
    }

    /**
     * List of Unique Contracts With Customers
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUniqueContractsWithCustomersTest() throws ApiException {
        Integer max = null;
        Integer offset = null;
        String customerId = null;
        String customerGUName = null;
        Long successTrackId = null;
        UniqueContractsResponse response = api.getUniqueContractsWithCustomers(max, offset, customerId, customerGUName, successTrackId);
        // TODO: test validations
    }

}
