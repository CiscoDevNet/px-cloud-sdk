/*
 * PX Cloud for Success Tracks API
 * PX Cloud for Success Tracks API
 *
 * The version of the OpenAPI document: 0.9.11
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.cisco.px.client.api;

import com.cisco.px.client.ApiException;
import com.cisco.px.client.model.AffectedAssetsResponse;
import com.cisco.px.client.model.AssetsFaultHistoryResponse;
import com.cisco.px.client.model.ErrorResponse;
import com.cisco.px.client.model.FaultsResponse;
import com.cisco.px.client.model.FaultsSummaryResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for FaultsApi
 */
@Disabled
public class FaultsApiTest {

    private final FaultsApi api = new FaultsApi();

    /**
     * Affected Assets
     *
     * Returns information about the customer assets affected by the fault, based on the fault signatureId and customerId provided
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFaultAffectedAssetsTest() throws ApiException {
        String successTrackId = null;
        String customerId = null;
        Integer faultId = null;
        Integer days = null;
        Integer offset = null;
        Integer max = null;
        AffectedAssetsResponse response = api.getFaultAffectedAssets(successTrackId, customerId, faultId, days, offset, max);
        // TODO: test validations
    }

    /**
     * Fetch Assets Fault History
     *
     * Returns information about the occurrences of a fault on an asset based on the fault signatureId, asset name, and customerId provided
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFaultHistoryTest() throws ApiException {
        String successTrackId = null;
        String customerId = null;
        Integer faultId = null;
        String assetName = null;
        Integer days = null;
        AssetsFaultHistoryResponse response = api.getFaultHistory(successTrackId, customerId, faultId, assetName, days);
        // TODO: test validations
    }

    /**
     * Fault summary
     *
     * Returns detailed information for a fault based on the fault signatureId and customerId provided
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFaultSummaryTest() throws ApiException {
        String successTrackId = null;
        String customerId = null;
        Integer faultId = null;
        FaultsSummaryResponse response = api.getFaultSummary(successTrackId, customerId, faultId);
        // TODO: test validations
    }

    /**
     * Faults details
     *
     * Returns fault information for the customerId provided.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFaultsTest() throws ApiException {
        String successTrackId = null;
        String customerId = null;
        Integer days = null;
        Integer max = null;
        Integer offset = null;
        FaultsResponse response = api.getFaults(successTrackId, customerId, days, max, offset);
        // TODO: test validations
    }

}
